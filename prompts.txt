Task: Generate only pyodbc MS SQL Query based on user input and return only Content without '`' symbol:
-- '{user_input}',and replace the values assigned to different forms of database names include backup directory C:\backup\krishna, restore directory C:\backup don't include ` symbol, don't add GO statement

---backupdatabase: Backup database TO DISK = "C:\backup\"
---backupdirectory: C:\backup
---restoredatabase: RESTORE DATABASE FROM DISK = 'C:\backup\' WITH RECOVERY, STATS = 1
---createdatabase: CREATE DATABASE
---datafilelocation: C:\Data\
---logfilelocation: C:\Log\
---longrunning: SELECT
                    r.session_id,
                    r.start_time,
                    r.status,
                    r.command,
                    r.wait_type,
                    r.wait_time,
                    r.total_elapsed_time,
                    r.cpu_time,
                    r.logical_reads,
                    r.reads,
                    r.writes,
                    r.blocking_session_id,
                    SUBSTRING(qt.text, (r.statement_start_offset / 2) + 1,
                              ((CASE r.statement_end_offset
                                  WHEN -1 THEN DATALENGTH(qt.text)
                                  ELSE r.statement_end_offset
                                END - r.statement_start_offset) / 2) + 1) AS query_text
                FROM sys.dm_exec_requests AS r
                CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) AS qt
                WHERE r.status = 'running'
                ORDER BY r.total_elapsed_time DESC;

---allprocesses: select * from sys.sysprocesses
---userdatabasebackupjob : USE msdb

                           EXEC sp_add_job
                               @job_name = 'UserDatabasesBackup',
                               @enabled = 1,
                               @notify_level_eventlog = 2,
                               @notify_level_email = 0,
                               @notify_level_netsend = 0,
                               @notify_level_page = 0,
                               @delete_level = 0

                           EXEC sp_add_jobstep
                               @job_name = 'UserDatabasesBackup',
                               @step_name = 'BackupUserDatabases',
                               @subsystem = 'TSQL',
                               @command =
                                   'DECLARE @name VARCHAR(50)
                                    DECLARE @path VARCHAR(256)
                                    DECLARE @fileName VARCHAR(256)
                                    DECLARE @fileDate VARCHAR(20)

                                    SET @path = ''C:\backup\''

                                    SELECT @fileDate = CONVERT(VARCHAR(20),GETDATE(),112)

                                    DECLARE db_cursor CURSOR FOR
                                    SELECT name
                                    FROM master.dbo.sysdatabases
                                    WHERE name NOT IN (''master'',''model'',''msdb'',''tempdb'')

                                    OPEN db_cursor
                                    FETCH NEXT FROM db_cursor INTO @name

                                    WHILE @@FETCH_STATUS = 0
                                    BEGIN
                                        SET @fileName = @path + @name + ''_'' + @fileDate + ''.bak''
                                        BACKUP DATABASE @name TO DISK = @fileName
                                        FETCH NEXT FROM db_cursor INTO @name
                                    END
                                    CLOSE db_cursor
                                    DEALLOCATE db_cursor',
                               @retry_attempts = 0,
                               @retry_interval = 0,
                               @on_success_action = 1,
                               @on_fail_action = 2

                           EXEC sp_add_jobschedule
                               @job_name = 'UserDatabasesBackup',
                               @name = 'DailyBackupSchedule',
                               @enabled = 1,
                               @freq_type = 4,  -- "4" means daily
                               @freq_interval = 1,
                               @active_start_time = 0

                           EXEC sp_add_jobserver
                               @job_name = 'UserDatabasesBackup',
                               @server_name = @@SERVERNAME"

---blockings: select * from sys.sysprocesses where blocked<>0 order by waittime desc
---historyoflongrunning:SELECT
                            SUBSTRING(qt.text, (qs.statement_start_offset / 2) + 1,
                                      ((CASE qs.statement_end_offset
                                          WHEN -1 THEN DATALENGTH(qt.text)
                                          ELSE qs.statement_end_offset
                                        END - qs.statement_start_offset) / 2) + 1) AS query_text,
                            qs.execution_count,
                            qs.total_logical_reads,
                            qs.total_logical_writes,
                            qs.total_worker_time,
                            qs.total_elapsed_time,
                            qs.total_elapsed_time / qs.execution_count AS avg_elapsed_time,
                            qs.total_worker_time / qs.execution_count AS avg_worker_time,
                            qs.total_logical_reads / qs.execution_count AS avg_logical_reads,
                            qs.total_logical_writes / qs.execution_count AS avg_logical_writes

                        FROM sys.dm_exec_query_stats AS qs
                        CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS qt
                        ORDER BY avg_elapsed_time DESC;
---restore database: RESTORE DATABASE FROM DISK = ""
---executesqljob: USE msdb; EXEC sp_start_job @job_name =""

